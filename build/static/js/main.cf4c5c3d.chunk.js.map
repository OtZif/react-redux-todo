{"version":3,"sources":["components/title/title.js","actions.js","components/header/header.js","components/task-item/task-item.js","components/tasks/task.js","components/main/main.js","components/footer/footer.js","components/app/app.js","reducers.js","index.js"],"names":["Title","react_default","a","createElement","className","ADD_TODO","REMOVE_TODO","TOGGLE_TODO","SET_VISIBILITY_FILTER","REMOVE_COMPLETED","CHECK_ALL_TODO","EDIT_TODO","CHANGE_EDIT_ID","Filters","SHOW_ALL","SHOW_ACTIVE","SHOW_COMPLETED","addTodo","text","type","destroy","id","removeCompleted","toggleTodo","checkAllTodo","setVisibilityFilter","filter","editTodo","changeEditId","connect","_ref","dispatch","placeholder","autoFocus","onBlur","e","target","value","trim","NaN","onKeyUp","keyCode","state","visibilityFilter","todos","currentEdit","actions","bindActionCreators","el","checked","map","item","key","defaultValue","onChange","onDoubleClick","onClick","Tasks","task_item","Component","Main","_this","this","props","base","length","complete","every","htmlFor","tasks_task","allChecked","Footer","buttons","name","label","clearAmount","amount","concat","renderButtons","classNames","_this2","Object","toConsumableArray","title_title","header_header","main_main","footer_footer","initialState","JSON","parse","localStorage","getItem","nextId","store","createStore","arguments","undefined","action","assign","objectSpread","todo","subscribe","setItem","stringify","getState","ReactDOM","render","es","app_app","document","querySelector"],"mappings":"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","file":"static/js/main.cf4c5c3d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./title.css\";\n\nconst Title = () => {\n  return <h1 className=\"title\">todos</h1>;\n};\nexport default Title;\n","export const ADD_TODO = \"ADD_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const SET_VISIBILITY_FILTER = \"SET_VISIBILITY_FILTER\";\nexport const REMOVE_COMPLETED = \"REMOVE_COMPLETED\";\nexport const CHECK_ALL_TODO = \"CHECK_ALL_TODO\";\nexport const EDIT_TODO = \"EDIT_TODO\";\nexport const CHANGE_EDIT_ID = \"CHANGE_EDIT_ID\";\n\nexport const Filters = {\n  SHOW_ALL: \"SHOW_ALL\",\n  SHOW_ACTIVE: \"SHOW_ACTIVE\",\n  SHOW_COMPLETED: \"SHOW_COMPLETED\"\n};\n\nexport const addTodo = text => {\n  return {\n    type: ADD_TODO,\n    text\n  };\n};\n\nexport const destroy = id => {\n  return {\n    type: REMOVE_TODO,\n    id\n  };\n};\nexport const removeCompleted = () => {\n  return {\n    type: REMOVE_COMPLETED\n  };\n};\n\nexport const toggleTodo = id => {\n  return {\n    type: TOGGLE_TODO,\n    id\n  };\n};\n\nexport const checkAllTodo = () => {\n  return {\n    type: CHECK_ALL_TODO\n  };\n};\n\nexport const setVisibilityFilter = filter => {\n  return {\n    type: SET_VISIBILITY_FILTER,\n    filter\n  };\n};\n\nexport const editTodo = (id, text) => {\n  return {\n    type: EDIT_TODO,\n    id,\n    text\n  };\n};\nexport const changeEditId = id => {\n  return {\n    type: CHANGE_EDIT_ID,\n    id\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./header.css\";\nimport { addTodo } from \"../../actions\";\n\nconst Header = ({ dispatch }) => (\n  <header className=\"header\">\n    <input\n      type=\"text\"\n      className=\"header--new-task\"\n      id=\"newTask\"\n      placeholder=\"What needs to be done?\"\n      autoFocus\n      onBlur={e => {\n        if (e.target.value.trim() === \"\") {\n          return NaN;\n        } else {\n          dispatch(addTodo(e.target.value));\n          e.target.value = \"\";\n        }\n      }}\n      onKeyUp={e => {\n        if (e.keyCode === 13) {\n          if (e.target.value.trim() === \"\") {\n            return NaN;\n          } else {\n            dispatch(addTodo(e.target.value));\n            e.target.value = \"\";\n          }\n        }\n      }}\n    />\n  </header>\n);\n\nexport default connect()(Header);\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\n\nconst TaskItem = ({\n  visibilityFilter,\n  todos,\n  currentEdit,\n  actions,\n}) => {\n  const visible = todos.filter(el => {\n    return (\n      visibilityFilter === \"SHOW_ALL\" ||\n      (visibilityFilter === \"SHOW_ACTIVE\" && !el.checked) ||\n      (visibilityFilter === \"SHOW_COMPLETED\" && el.checked)\n    );\n  });\n\n  const element = visible.map(item => {\n    if (currentEdit === item.id) {\n      return (\n        <li key={item.id}>\n          <input\n            id={currentEdit.id}\n            className=\"edit\"\n            autoFocus\n            defaultValue={item.text}\n            onBlur={e => {\n              if (e.target.value.trim() === \"\") {\n                return actions.destroy(item.id);\n              } else {\n                actions.editTodo(item.id, e.target.value);\n                e.target.value = \"\";\n              }\n            }}\n            onKeyUp={e => {\n              //const {dispatch} = store;\n              if (e.keyCode === 13) {\n                if (e.target.value.trim() === \"\") {\n                  return actions.destroy(item.id);\n                } else {\n                  actions.editTodo(item.id, e.target.value);\n                  e.target.value = \"\";\n                }\n              }\n            }}\n          />\n        </li>\n      );\n    }\n\n    return (\n      <li key={item.id}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={item.checked}\n            onChange={() => actions.toggleTodo(item.id)}\n          />\n          <label onDoubleClick={() => actions.changeEditId(item.id)}>\n            {item.text}\n          </label>\n          <button\n            className=\"destroy\"\n            onClick={() => actions.destroy(item.id)}\n          />\n        </div>\n      </li>\n    );\n  });\n  return element;\n};\n\nconst mapStateToProps = state => ({\n  visibilityFilter: state.visibilityFilter,\n  todos: state.todos,\n  currentEdit: state.currentEdit\n});\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskItem);\n","import React, { Component } from \"react\";\nimport \"./task.css\";\nimport TaskItem from \"../task-item/task-item\";\n\nclass Tasks extends Component {\n  render() {\n    return (\n      <ul className=\"main--list\" id=\"mainList\">\n        <TaskItem />\n      </ul>\n    );\n  }\n}\n\nexport default Tasks;\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport \"./main.css\";\nimport Tasks from \"../tasks/task\";\nimport * as actions from \"../../actions\";\n\nclass Main extends Component {\n  render() {\n    return (\n      <main className=\"main\">\n        {this.props.base.length > 0 && (\n          <input\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            onChange={() => this.props.complete.checkAllTodo()}\n            checked={this.props.base.every(el => el.checked)}\n          />\n        )}\n        <label className=\"pen\" htmlFor=\"toggle-all\" />\n        <Tasks />\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  base: state.todos,\n  allChecked: state.allChecked\n});\nconst mapDispatchToProps = dispatch => ({\n  complete: bindActionCreators(actions, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main);\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport \"./footer.css\";\nimport * as actions from \"../../actions\";\n\nclass Footer extends Component {\n  buttons = [\n    { name: \"SHOW_ALL\", label: \"All\" },\n    { name: \"SHOW_ACTIVE\", label: \"Active\" },\n    { name: \"SHOW_COMPLETED\", label: \"Completed\" }\n  ];\n\n  clearAmount = () => {\n    const amount = this.props.todos.filter(el => el.checked).length;\n    return amount === 0 ? `clear-completed visibility` : \"clear-completed\";\n  };\n\n  amount = () => {\n    if (this.props.amount <= 1) {\n      return `${this.props.amount} item left`;\n    } else {\n      return `${this.props.amount} items left`;\n    }\n  };\n\n  renderButtons = () => {\n    return this.buttons.map(({ name, label }) => {\n      return (\n        <button\n          key={name}\n          className={classNames(\n            `control--item  ${\n              this.props.visibilityFilter === name ? \"selected\" : \"\"\n            } `\n          )}\n          onClick={() => this.props.actions.setVisibilityFilter(name)}\n        >\n          {label}\n        </button>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <footer className=\"footer\">\n        <span>{this.amount()}</span>\n        <div className=\"control\">{this.renderButtons()}</div>\n        <button\n          className={this.clearAmount()}\n          onClick={() => this.props.actions.removeCompleted()}\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  visibilityFilter: state.visibilityFilter,\n  todos: [...state.todos],\n  amount: state.todos.filter(el => !el.checked).length\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Footer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Title from \"../title/title\";\nimport Header from \"../header/header\";\nimport Main from \"../main/main\";\nimport Footer from \"../footer/footer\";\nimport \"./app.css\";\n\nconst App = ({ todos }) => {\n  return (\n    <div>\n      <Title />\n      <section className=\"todo\">\n        <Header />\n        <Main />\n        {todos.length > 0 && <Footer />}\n      </section>\n    </div>\n  );\n};\nconst mapStateToProps = state => ({\n  todos: state.todos\n});\n\nexport default connect(mapStateToProps)(App);\n","import {\n  ADD_TODO,\n  REMOVE_TODO,\n  TOGGLE_TODO,\n  SET_VISIBILITY_FILTER,\n  REMOVE_COMPLETED,\n  CHECK_ALL_TODO,\n  EDIT_TODO,\n  CHANGE_EDIT_ID,\n  Filters\n} from \"./actions\";\n\nconst initialState = JSON.parse(localStorage.getItem(\"todo\")) || {\n  visibilityFilter: Filters.SHOW_ALL,\n  nextId: 0,\n  allChecked: false,\n  currentEdit: null,\n  todos: []\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return Object.assign({}, state, {\n        visibilityFilter: action.filter\n      });\n    case ADD_TODO:\n      return Object.assign({}, state, {\n        todos: [\n          ...state.todos,\n          {\n            id: state.nextId,\n            text: action.text,\n            checked: false\n          }\n        ],\n        nextId: state.nextId + 1\n      });\n    case REMOVE_TODO:\n      return Object.assign({}, state, {\n        todos: state.todos.filter(el => el.id !== action.id)\n      });\n    case REMOVE_COMPLETED:\n      return Object.assign({}, state, {\n        todos: state.todos.filter(el => !el.checked)\n      });\n    case CHECK_ALL_TODO:\n      return Object.assign({}, state, {\n        ...state,\n        todos: state.todos.map(el => ({ ...el, checked: !state.allChecked })),\n        allChecked: !state.allChecked\n      });\n    case EDIT_TODO:\n      return Object.assign({}, state, {\n        todos: state.todos.map(el => {\n          if (el.id === action.id) {\n            el.text = action.text;\n          }\n          return {\n            ...el\n          };\n        }),\n        currentEdit: null\n      });\n    case CHANGE_EDIT_ID:\n      return Object.assign({}, state, {\n        currentEdit: action.id\n      });\n    case TOGGLE_TODO:\n      return Object.assign({}, state, {\n        todos: state.todos.map((todo, id) => {\n          if (todo.id === action.id) {\n            return Object.assign({}, todo, {\n              checked: !todo.checked\n            });\n          }\n          return todo;\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport \"./custom-reset.css\";\nimport App from \"./components/app/app.js\";\nimport {reducer} from \"./reducers\";\n\n\n\nlet store = createStore(reducer);\n\n\nconst update = () => {\n  localStorage.setItem(\"todo\", JSON.stringify(store.getState()));\n};\nstore.subscribe(update);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}